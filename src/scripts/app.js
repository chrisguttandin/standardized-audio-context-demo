/*
 * It is important to import all used exports of standardized-audio-context explicitly. Mixing native AudioNodes with those from
 * standardized-audio-context will not work.
 */
import { AudioContext, AudioWorkletNode, GainNode, OscillatorNode, isSupported } from 'standardized-audio-context';

let audioContext = null;
let isAudioWorkletLoaded = false;

const $browserSupport = document.getElementById('browser-support');
const $browserSupportMessage = document.getElementById('browser-support-message');
const playBeep = () => {
    if (audioContext === null) {
        audioContext = new AudioContext();
    }

    const oscillatorNode = new OscillatorNode(audioContext, { frequency: 500 });

    oscillatorNode.onended = () => oscillatorNode.disconnect();
    oscillatorNode.connect(audioContext.destination);

    oscillatorNode.start();
    oscillatorNode.stop(audioContext.currentTime + 0.5);
};
const playNoise = async () => {
    if (audioContext === null) {
        audioContext = new AudioContext();
    }

    if (!isAudioWorkletLoaded) {
        await audioContext.audioWorklet.addModule('scripts/worklet.js');

        isAudioWorkletLoaded = true;
    }

    const audioWorkletNode = new AudioWorkletNode(audioContext, 'noise-processor');
    const gainNode = new GainNode(audioContext, { gain: 0.6 });
    const currentTime = audioContext.currentTime;

    gainNode.gain.setValueAtTime(0.6, currentTime + 0.4);
    gainNode.gain.linearRampToValueAtTime(0, currentTime + 0.5);

    audioWorkletNode
        .connect(gainNode)
        .connect(audioContext.destination);

    setTimeout(() => {
        audioWorkletNode.disconnect();
        gainNode.disconnect();
    }, 10000);
};
const setUpDemo = () => {
    $browserSupport.insertAdjacentHTML('afterend', `
        <section>
            <h2>Beep demo</h2>
            <p>When pressing the button below you shoul here a short beep. The sound is generated by using an <a href="https://webaudio.github.io/web-audio-api/#oscillatornode">OscillatorNode</a>. Clicking the button will trigger the <code>playBeep()</code> function.</p>
            <button id="play-beep-button">play beep</button>
        <section>
        <section>
            <h2>Noise demo</h2>
            <p>This button will play a short burst of white noise when being pressed. It does so by using an <a href="https://webaudio.github.io/web-audio-api/#audioworklet">AudioWorklet</a>. The code for the AudioWorkletProcessor itself can be found in the file named "worklet.js". The <code>playNoise()</code> function is responsible to load the AudioWorklet and to setup an AudioWorkletNode.</p>
            <button id="play-noise-button">play noise</button>
        <section>
    `);

    const $playBeepButton = document.getElementById('play-beep-button');
    const $playNoiseButton = document.getElementById('play-noise-button');

    $playBeepButton.addEventListener('click', playBeep);
    $playNoiseButton.addEventListener('click', playNoise);
};

isSupported()
    .then((isBrowserSupported) => {
        $browserSupportMessage.innerHTML = (isBrowserSupported)
            ? '✅ Your browser is supported and everything should work as expected.'
            : '⚠️ Sorry, your browser is not supported.';

        if (isBrowserSupported) {
            setUpDemo();
        }
    }).
    catch(() => {
        $browserSupportMessage.innerHTML = '⚠️ The browser support could not be determined.';
    });
